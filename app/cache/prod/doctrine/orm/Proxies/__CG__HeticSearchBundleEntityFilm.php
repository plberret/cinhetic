<?php

namespace Proxies\__CG__\Hetic\SearchBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Film extends \Hetic\SearchBundle\Entity\Film implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setSynopsis($synopsis)
    {
        $this->__load();
        return parent::setSynopsis($synopsis);
    }

    public function getSynopsis()
    {
        $this->__load();
        return parent::getSynopsis();
    }

    public function setVues($vues)
    {
        $this->__load();
        return parent::setVues($vues);
    }

    public function getVues()
    {
        $this->__load();
        return parent::getVues();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDateParution($dateParution)
    {
        $this->__load();
        return parent::setDateParution($dateParution);
    }

    public function getDateParution()
    {
        $this->__load();
        return parent::getDateParution();
    }

    public function setDateCreated($dateCreated)
    {
        $this->__load();
        return parent::setDateCreated($dateCreated);
    }

    public function getDateCreated()
    {
        $this->__load();
        return parent::getDateCreated();
    }

    public function addTag(\Hetic\SearchBundle\Entity\Tag $tag)
    {
        $this->__load();
        return parent::addTag($tag);
    }

    public function removeTag(\Hetic\SearchBundle\Entity\Tag $tag)
    {
        $this->__load();
        return parent::removeTag($tag);
    }

    public function getTag()
    {
        $this->__load();
        return parent::getTag();
    }

    public function addActeur(\Hetic\SearchBundle\Entity\Acteur $acteur)
    {
        $this->__load();
        return parent::addActeur($acteur);
    }

    public function removeActeur(\Hetic\SearchBundle\Entity\Acteur $acteur)
    {
        $this->__load();
        return parent::removeActeur($acteur);
    }

    public function getActeur()
    {
        $this->__load();
        return parent::getActeur();
    }

    public function setCategory(\Hetic\SearchBundle\Entity\Categorie $category = NULL)
    {
        $this->__load();
        return parent::setCategory($category);
    }

    public function getCategory()
    {
        $this->__load();
        return parent::getCategory();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'title', 'synopsis', 'vues', 'description', 'dateParution', 'dateCreated', 'tag', 'acteur', 'category');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}